# Adapted from https://packaging.python.org/guides/supporting-windows-using-appveyor/
#
image: "Visual Studio 2015"

skip_non_tags: false  # we want to build untagged revisions.

environment:
  GCLOUD_WHLS: "https://storage.googleapis.com/natcap-build-dependencies/python-win32"

  matrix:
    # For Python versions available on Appveyor, see
    # https://www.appveyor.com/docs/windows-images-software/#python

    - PYTHON: "C:\\Python27"
      TOXENV: "py27"
      GDAL_WHL: "GDAL-2.2.4-cp27-cp27m-win32.whl"
      SHAPELY_WHL: "Shapely-1.6.4.post1-cp27-cp27m-win32.whl"
      RTREE_WHL: "Rtree-0.8.3-cp27-cp27m-win32.whl"

    - PYTHON: "C:\\Python36"
      TOXENV: "py36"
      GDAL_WHL: "GDAL-2.3.2-cp36-cp36m-win32.whl"
      SHAPELY_WHL: "Shapely-1.6.4.post1-cp36-cp36m-win32.whl"
      RTREE_WHL: "Rtree-0.8.3-cp36-cp36m-win32.whl"

    - PYTHON: "C:\\Python37"
      TOXENV: "py37"
      GDAL_WHL: "GDAL-2.4.1-cp37-cp37m-win32.whl"
      SHAPELY_WHL: "Shapely-1.6.4.post1-cp37-cp37m-win32.whl"
      RTREE_WHL: "Rtree-0.8.3-cp37-cp37m-win32.whl"

    - PYTHON: "C:\\Python27-x64"
      TOXENV: "py27"
      GDAL_WHL: "GDAL-2.2.4-cp27-cp27m-win_amd64.whl"
      SHAPELY_WHL: "Shapely-1.6.4.post1-cp27-cp27m-win_amd64.whl"
      RTREE_WHL: "Rtree-0.8.3-cp27-cp27m-win_amd64.whl"

    - PYTHON: "C:\\Python36-x64"
      TOXENV: "py36"
      GDAL_WHL: "GDAL-2.4.1-cp36-cp36m-win_amd64.whl"
      SHAPELY_WHL: "Shapely-1.6.4.post1-cp36-cp36m-win_amd64.whl"
      RTREE_WHL: "Rtree-0.8.3-cp36-cp36m-win_amd64.whl"

    - PYTHON: "C:\\Python37-x64"
      TOXENV: "py37"
      GDAL_WHL: "GDAL-2.4.1-cp37-cp37m-win_amd64.whl"
      SHAPELY_WHL: "Shapely-1.6.4.post1-cp37-cp37m-win_amd64.whl"
      RTREE_WHL: "Rtree-0.8.3-cp37-cp37m-win_amd64.whl"

install:
    # We need wheel installed to build wheels
    - "%PYTHON%\\python.exe -m pip install wheel"
    - "%PYTHON%\\python.exe -m pip install %GCLOUD_WHLS%/%GDAL_WHL%"
    - "%PYTHON%\\python.exe -m pip install %GCLOUD_WHLS%/%SHAPELY_WHL%"
    - "%PYTHON%\\python.exe -m pip install %GCLOUD_WHLS%/%RTREE_WHL%"
    - "%PYTHON%\\python.exe -m pip install tox -r requirements.txt"

build: off

test_script:
    - "%PYTHON%\\python.exe -m tox -vv --sitepackages -e %TOXENV%"

after_test:
    # This step builds your wheels for artifacts
    - "%PYTHON%\\python.exe setup.py bdist_wheel"

artifacts:
    # bdist_wheel puts your built wheel in the dist directory
    - path: dist\*

# Cache-related items adapted from pyinstaller appveyor configuration.
# https://github.com/pyinstaller/pyinstaller/blob/develop/appveyor.yml
cache:
  # Cache downloaded pip, pipwin packages and built wheels.
  - '%LOCALAPPDATA%\pip\Cache\http'
  - '%LOCALAPPDATA%\pip\Cache\wheels'
  - '%HOMEPATH%\pipwin'

on_finish:
  # Remove old or huge cache files to hopefully not exceed the 1GB cache limit.
  #
  # If the cache limit is reached, the cache will not be updated (of not even
  # created in the first run). So this is a trade of between keeping the cache
  # current and having a cache at all.
  - C:\cygwin\bin\find "%LOCALAPPDATA%\pip" -type f -mtime +360 -delete
  - C:\cygwin\bin\find "%LOCALAPPDATA%\pip" -empty -delete
  # Show size of cache
  - C:\cygwin\bin\du -hs "%LOCALAPPDATA%\pip\Cache"
