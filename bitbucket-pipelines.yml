pipelines:
  custom:
    pygeoprocessing-docker-image:
      - step:
          name: "Build PyGeoprocessing Docker image"
          services:
            - docker
          script: # Modify the commands below to build your repository.
            # Set $DOCKER_HUB_USERNAME and $DOCKER_HUB_PASSWORD as environment variables in repository settings
            - export IMAGE_NAME=natcap/pygeoprocessing-docker:$BITBUCKET_COMMIT
            # build the Docker image (this will use the Dockerfile in the root of the repo)
            - docker build -t $IMAGE_NAME pygeoprocessing-docker
            # authenticate with the Docker Hub registry
            - docker login --username $DOCKER_HUB_USERNAME --password $DOCKER_HUB_PASSWORD
            # push the new Docker image to the Docker registry
            - docker push $IMAGE_NAME
    appveyor-tests:
      - step:
          # NOTE: this step should not normally be needed if hooks are running
          # as expected with appveyor.  It's added here in case we need to retrigger
          # an appveyor build after-the-fact.
          name: "AppVeyor Tests"
          image: debian:9.7
          script:
            - apt-get update && apt-get install -y curl mercurial
            - |
              curl --fail --header "Authorization: Bearer $APPVEYOR_API_KEY" \
                --header "Content-Type: application/json" \
                --data "{'accountName': '$APPVEYOR_ACC_NAME',
                         'projectSlug': '$APPVEYOR_PROJ_SLUG',
                         'branch': '$(hg branch)',
                         'commitID': '$(hg log -r . -T \"{node}\")'}" \
                "https://ci.appveyor.com/api/builds"
            - echo "Build history at "
            - echo "    https://ci.appveyor.com/project/$APPVEYOR_ACC_NAME/$APPVEYOR_PROJ_SLUG/history"
  default:
    - parallel:
      - step:
          name: "Tests: python 3.6 on linux"
          image: natcap/pygeoprocessing-docker:a8731f093fdbf156abada31dec3888a5cf9ddb1e
          services:
              - docker
          caches:
              - docker
          script:
              - conda run -n py36 python setup.py install
              - conda run -n py36 pytest -v tests
      - step:
          name: "Tests: python 3.7 on linux"
          image: natcap/pygeoprocessing-docker:a8731f093fdbf156abada31dec3888a5cf9ddb1e
          services:
              - docker
          caches:
              - docker
          script:
              - conda run -n py37 python setup.py install
              - conda run -n py37 pytest -v tests
